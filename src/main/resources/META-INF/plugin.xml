<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>dev.MikhailShad.nuXmv-plugin</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>NuXmv</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor url="https://github.com/MikhailShad/nuXmv-plugin">Mikhail Shadrin</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    <p>IntelliJ IDEA support for the <a href="https://nuxmv.fbk.eu/">NuXmv</a> formal verification language. This plugin enables efficient development of formal verification models with a rich set of features.</p>
    
    <h2>Key Features</h2>
    
    <h3>Language Support</h3>
    <ul>
      <li>Syntax highlighting for NuXmv models (.smv, .xmv, .nuxmv files)</li>
      <li>Smart code completion for keywords, operators, variables, and modules</li>
      <li>Code navigation, structure view, and breadcrumbs</li>
      <li>Reference resolution for variables, modules, and definitions</li>
      <li>Code folding, formatting, and commenter support</li>
      <li>Find usages and refactoring tools</li>
    </ul>
    
    <h3>Execution Support</h3>
    <ul>
      <li>Built-in run configuration for executing NuXmv models</li>
      <li>Support for different verification engines (BDD, MSAT)</li>
      <li>Configurable verification options for CTL, LTL, and INVAR specifications</li>
      <li>Integrated console with syntax highlighting and command history</li>
    </ul>
    
    <h3>Model Visualization</h3>
    <ul>
      <li>Interactive visualization of state models and transitions</li>
      <li>Counterexample trace visualization with state details</li>
      <li>State variable tracking across traces</li>
      <li>Browser-based embedded visualization</li>
    </ul>
    
    <h3>FOR Loop Macro Support</h3>
    <ul>
      <li>Simplify repetitive model elements with FOR loop macros</li>
      <li>Automatic macro expansion during model verification</li>
      <li>Support for variable substitution within macro bodies</li>
    </ul>
    
    <p>This plugin is not affiliated with the official NuXmv project.</p>
  ]]></description>

    <change-notes><![CDATA[
    <h3>0.0.1</h3>
    <ul>
      <li>Initial release with language support for NuXmv</li>
      <li>Run configuration for model verification</li>
      <li>Interactive model visualization</li>
      <li>FOR loop macro extension for compact model description</li>
    </ul>
  ]]></change-notes>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <fileType
                name="NuXmv File"
                implementationClass="dev.mikhailshad.nuxmvplugin.language.NuXmvFileType"
                fieldName="INSTANCE"
                language="nuXmv"
                extensions="nuxmv;xmv;smv"/>
        <lang.parserDefinition
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.language.parser.NuXmvParserDefinition"/>
        <!-- Syntax highlighter -->
        <additionalTextAttributes scheme="Darcula" file="colorScheme/NuXmv_Darcula.xml"/>
        <additionalTextAttributes scheme="Default" file="colorScheme/NuXmv_Default.xml"/>
        <lang.syntaxHighlighterFactory
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.highlighter.NuXmvSyntaxHighlighterFactory"/>
        <annotator
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.highlighter.NuXmvHighlighterAnnotator"/>
        <colorSettingsPage
                implementation="dev.mikhailshad.nuxmvplugin.ide.highlighter.NuXmvColourSettingsPage"/>

        <lang.braceMatcher
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.editor.NuXmvBraceMatcher"/>
        <annotator
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.annotator.NuXmvWarningAnnotator"/>
        <codeInsight.lineMarkerProvider
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.editor.NuXmvLineMarkerProvider"/>
        <completion.contributor
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.language.completion.NuXmvCompletionContributor"/>
        <lang.psiStructureViewFactory
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.structure.NuXmvStructureViewFactory"/>
        <navbar implementation="dev.mikhailshad.nuxmvplugin.ide.structure.NuXmvStructureAwareNavbar"/>
        <psi.referenceContributor
                language="nuXmv"
                implementation="dev.mikhailshad.nuxmvplugin.language.reference.NuXmvReferenceContributor"/>
        <lang.refactoringSupport
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.refactoring.NuxmvRefactoringSupportProvider"/>
        <gotoSymbolContributor
                implementation="dev.mikhailshad.nuxmvplugin.ide.navigation.NuXmvNavigationContributor"/>
        <codeInsight.lineMarkerProvider
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.marker.NuXmvLineMarkerProvider"/>
        <lang.findUsagesProvider
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.findusages.NuXmvFindUsagesProvider"/>
        <lang.documentationProvider
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.language.documentation.NuXmvDocumentationProvider"/>
        <breadcrumbsInfoProvider
                implementation="dev.mikhailshad.nuxmvplugin.ide.breadcrumbs.NuXmvBreadcrumbsInfoProvider"/>
        <lang.commenter
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.format.NuXmvCommenter"/>
        <lang.formatter
                language="nuXmv"
                implementationClass="dev.mikhailshad.nuxmvplugin.ide.format.NuXmvFormattingModelBuilder"/>
        <lang.foldingBuilder language="nuXmv"
                             implementationClass="dev.mikhailshad.nuxmvplugin.ide.folding.NuXmvFoldingBuilder"/>
        <langCodeStyleSettingsProvider
                implementation="dev.mikhailshad.nuxmvplugin.ide.settings.NuXmvLanguageCodeStyleSettingsProvider"/>
        <codeStyleSettingsProvider
                implementation="dev.mikhailshad.nuxmvplugin.ide.settings.NuXmvCodeStyleSettingsProvider"/>

        <!-- Settings -->
        <applicationConfigurable
                parentId="tools"
                instance="dev.mikhailshad.nuxmvplugin.ide.configuration.NuXmvSettingsConfigurable"
                id="dev.mikhailshad.nuxmvplugin.settings.NuXmvSettingsConfigurable"
                displayName="nuXmv"/>
        <applicationService
                serviceImplementation="dev.mikhailshad.nuxmvplugin.ide.configuration.NuXmvSettingsState"/>

        <!-- Run Configuration -->
        <configurationType
                implementation="dev.mikhailshad.nuxmvplugin.ide.run.configuration.NuXmvConfigurationType"/>
        <runConfigurationProducer
                implementation="dev.mikhailshad.nuxmvplugin.ide.run.configuration.NuXmvRunConfigurationProducer"/>

    </extensions>
</idea-plugin>
